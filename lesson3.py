"""Работа с переменными:
1 Переменной var_int присвойте значение 10, var_float - значение 8.4, var_str - "No".
2 Измените значение, хранимое в переменной var_int, увеличив его в 3.5 раза,
результат свяжите с переменной big_int.
3 Измените значение, хранимое в переменной var_float, уменьшив его на единицу,
результат свяжите с той же переменной.
4 Разделите var_int на var_float, а затем big_int на var_float. Результат данных
выражений не привязывайте ни к каким переменным.
5 Измените значение переменной var_str на "NoNoYesYesYes". При формировании
нового значения используйте операции конкатенации (+) и повторения строки (*).
6 Выведите значения всех переменных."""

var_int = 10
var_float = 8.4
var_str = "No"
big_int = var_int * 3.5
var_float -= 1

print(var_int / var_float)
print(big_int / var_float)

var_str = var_str * 2 + "Yes" * 3

print(f"var_int: {var_int}")
print(f"big_int: {big_int}")
print(f"var_float: {var_float}")
print(f"var_str: {var_str}")


"""Строки:
1 Свяжите переменную с любой строкой, состоящей не менее чем из 8 символов.
Извлеките из строки первый символ, затем последний, третий с начала и третий с
конца. Измерьте длину вашей строки.
2 Присвойте произвольную строку длиной 10-15 символов переменной и извлеките из
нее следующие срезы:
● первые восемь символов
● четыре символа из центра строки
● символы с индексами кратными трем
● переверните строку
3 Есть строка: “my name is name”. Напечатайте ее, но вместо 2ого “name” вставьте
ваше имя.
4 Есть строка: test_tring = "Hello world!", необходимо
● напечатать на каком месте находится буква w
● кол-во букв l
● Проверить начинается ли строка с подстроки: “Hello”
● Проверить заканчивается ли строка подстрокой: “qwe”"""

# Присваиваем значение переменной
my_string = "Programming"

# Извлекаем символы
first_char = my_string[0]
last_char = my_string[-1]
third_from_start = my_string[2]
third_from_end = my_string[-3]

# Измеряем длину строки
string_length = len(my_string)

# Выводим результаты
print(f"Первый символ: {first_char}")
print(f"Последний символ: {last_char}")
print(f"Третий символ с начала: {third_from_start}")
print(f"Третий символ с конца: {third_from_end}")
print(f"Длина строки: {string_length}")


# Присваиваем значение переменной
random_string = "1234567890ABCDE"

# Извлекаем срезы
first_eight = random_string[:8]
center_four = random_string[5:9]
every_third = random_string[::3]
reversed_string = random_string[::-1]

# Выводим результаты
print(f"Первые восемь символов: {first_eight}")
print(f"Четыре символа из центра строки: {center_four}")
print(f"Символы с индексами кратными трем: {every_third}")
print(f"Перевернутая строка: {reversed_string}")


original_string = "my name is name"
my_name = "Ivan"

# Замена второго "name" на ваше имя
modified_string = original_string.replace("name", my_name, 1)

# Выводим результат
print(modified_string)


test_string = "Hello world!"

# Найти позицию буквы "w"
position_w = test_string.index("w")

# Количество букв "l"
count_l = test_string.count("l")

# Проверить начинается ли строка с "Hello"
starts_with_hello = test_string.startswith("Hello")

# Проверить заканчивается ли строка на "qwe"
ends_with_qwe = test_string.endswith("qwe")

# Выводим результаты
print(f"Позиция буквы 'w': {position_w}")
print(f"Количество букв 'l': {count_l}")
print(f"Строка начинается с 'Hello': {starts_with_hello}")
print(f"Строка заканчивается на 'qwe': {ends_with_qwe}")

"""Списки:
1 Создайте два любых списка и свяжите их с переменными.
2 Извлеките из первого списка второй элемент.
3 Измените во втором списке последний элемент. Выведите список на экран.
4 Соедините оба списка в один, присвоив результат новой переменной. Выведите
получившийся список на экран.
5 "Снимите" срез из соединенного списка так, чтобы туда попали некоторые части
обоих первых списков. Срез свяжите с очередной новой переменной. Выведите
значение этой переменной.
6 Добавьте в список два новых элемента и снова выведите его.
7 Даны списки:
a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89];
b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].
Нужно вернуть список, который состоит из элементов, общих для этих двух
списков. -- !не использовать циклы
8 Есть список: [1, 2, 3, 4, 3, 2, 5, 1, 4, 6, 7, 1, 8, 2, 3]
оставить в нем только уникальные
значения. !не использовать циклы"""


# 1
list1 = [1, 2, 3, 4, 5]
list2 = ["a", "b", "c", "d"]

# 2
second_element_list1 = list1[1]
print(second_element_list1)

# 3
list2[-1] = "z"
print(list2)

# 4
combined_list = list1 + list2
print(combined_list)

# 5
sliced_list = combined_list[2:7]
print(sliced_list)

# 6
combined_list.append("new_element1")
combined_list.append("new_element2")
print(combined_list)

# 7
a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

common_elements = list(set(a) & set(b))
print(common_elements)

# 8
original_list = [1, 2, 3, 4, 3, 2, 5, 1, 4, 6, 7, 1, 8, 2, 3]
unique_values_list = list(set(original_list))
print(unique_values_list)

"""
Логические операции:
1. Присвойте двум переменным любые числовые значения.
2. Составьте четыре сложных логических выражения с помощью оператора and, два из которых должны давать истину, а два других - ложь.
3. Аналогично выполните п. 2, но уже используя оператор or.
4. Попробуйте использовать в сложных логических выражениях работу с переменными строкового типа.
"""

a = 20
b = 10

# Оператор and
result1 = (a > 0) and (a < 40)
result2 = (b < a) and (b > 0)

result3 = (a < 0) and (a > 40)
result4 = (b > a) and (b < 0)

print(result1, result2)
print(result3, result4)

# Оператор or
result5 = (a > 0) or (a < 40)
result6 = (b < a) or (b > 0)

result7 = (a < 0) or (a > 40)
result8 = (b > a) or (b < 0)

print(result5, result6)
print(result7, result8)

str1 = "hello"
str2 = "world"

# Оператор and
str_result1 = (str1 == "hello") and (str2 == "world")
str_result2 = (str1 == "hello") and (str2 == "python")

# Оператор or
str_result3 = (str1 == "hello") or (str2 == "python")
str_result4 = (str1 == "python") or (str2 == "java")

"""
Словари:
1. Создайте словарь, связав его с переменной school, и наполните его данными, которые бы отражали количество учащихся в десяти разных классах (например, 1а, 1б, 2б, 6а, 7в и т.д.).
2. Узнайте сколько человек в каком-нибудь классе.
3. Представьте, что в школе произошли изменения, внесите их в словарь:
◦ в трех классах изменилось количество учащихся;
◦ в школе появилось два новых класса;
◦ в школе расформировали один из классов.
4. Выведите содержимое словаря на экран.
"""

# Шаг 1: Создаем словарь и наполняем его данными
school = {
    "1а": 30,
    "1б": 28,
    "2а": 25,
    "2б": 27,
    "3а": 29,
    "3б": 30,
    "4а": 26,
    "4б": 28,
    "5а": 31,
    "5б": 29,
}

# Шаг 2: Узнаем, сколько человек в каком-нибудь классе
class_name = "2б"
print(f"Количество учащихся в классе {class_name}: {school[class_name]}")

# Шаг 3: Вносим изменения в словарь
# Изменяем количество учащихся в трех классах
school["1а"] = 32
school["3б"] = 27
school["4а"] = 28

# Добавляем два новых класса
school["6а"] = 30
school["6б"] = 29

# Расформировываем один из классов
del school["5б"]

# Шаг 4: Выводим содержимое словаря на экран
print("Содержимое словаря school после изменений:")
for key, value in school.items():
    print(f"Класс {key}: {value} учащихся")


"""
Преобразование типов
1.        Перевести строку в массив
"Robin Singh" => ["Robin”, “Singh"]
"I love arrays they are my favorite" => ["I", "love", "arrays", "they", "are", "my", "favorite"]
2.        Дан список: [‘Ivan’, ‘Ivanou’], и 2 строки: Minsk, Belarus
Напечатайте текст: “Привет, Ivan Ivanou! Добро пожаловать в Minsk Belarus”
3.Дан список ["I", "love", "arrays", "they", "are", "my", "favorite"]
сделайте из него строку => "I love arrays they are my favorite"
4.Создайте список из 10 элементов, вставьте на 3-ю позицию новое значение,
удалите элемент из списка под индексом 6
5.
Есть 2 словаря
a = { 'a': 1, 'b': 2, 'c': 3}
b = { 'c': 3, 'd': 4,'e': 5}
Необходимо их объединить по ключам, а значения ключей поместить в список,
если у одного словаря есть ключ "а", а у другого нету,
то поставить значение None на соответствующую позицию(1-я позиция для 1-ого словаря,
вторая для 2-ого) ab = {'a': [1, None], 'b': [2, None], 'c': [3, 3], 'd': [None, 4], 'e': [None, 5]}

"""

# Пример 1
string1 = "Robin Singh"
array1 = string1.split()
print(array1)

string2 = "I love arrays they are my favorite"
array2 = string2.split()
print(array2)

# Пример 2
names = ["Ivan", "Ivanou"]
city = "Minsk"
country = "Belarus"
print(f"Привет, {names[0]} {names[1]}! Добро пожаловать в {city} {country}")


# Пример 3
array = ["I", "love", "arrays", "they", "are", "my", "favorite"]
string = " ".join(array)
print(string)

# Пример 4
# Создаём список из 10 элементов
my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# Вставляем новое значение на 3-ю позицию (индекс 2)
my_list.insert(2, "new_value")
print(my_list)

# Удаляем элемент под индексом 6
del my_list[6]
print(my_list)

# Пример 5
a = {"a": 1, "b": 2, "c": 3}
b = {"c": 3, "d": 4, "e": 5}

ab = {}

# Получаем уникальные ключи из обоих словарей
all_keys = set(a.keys()).union(b.keys())

for key in all_keys:
    ab[key] = [a.get(key), b.get(key)]

print(ab)


"""*1) Вам передан массив чисел. Известно, что каждое число в этом массиве имеет пару,
кроме одного: [1, 5, 2, 9, 2, 9, 1] => 5
Напишите программу, которая будет выводить уникальное число

*2) Дан текст, который содержит различные английские буквы и знаки препинания. Вам необходимо найти самую частую букву в тексте.
Результатом должна быть буква в нижнем регистре.
При поиске самой частой буквы, регистр не имеет значения, так что при подсчете считайте, что "A" == "a".
Убедитесь, что вы не считайте знаки препинания, цифры и пробелы, а только буквы.
Если в тексте две и больше буквы с одинаковой частотой, тогда результатом будет буква, которая идет первой в алфавите.
Для примера, "one" содержит "o", "n", "e" по одному разу, так что мы выбираем "e".
"a-z" == "a"
"Hello World!" == "l"
"How do you do?" == "o"
"One" == "e"
"Oops!" == "o"
"AAaooo!!!!" == "a"
"a" * 9000 + "b" * 1000 == "a"

"""

"""
Условия
1.Дано целое число. Если оно является положительным,
то прибавить к нему 1; в противном случае не изменять его.
Вывести полученное число.
2.Даны три целых числа. Найти количество положительных чисел в исходном наборе.
3.Дан номер года (положительное целое число).
Определить количество дней в этом году, учитывая, что обычный год насчитывает 365 дней,
а високосный — 366 дней. Високосным считается год, делящийся на 4,
за исключением тех годов, которые делятся на 100 и не делятся на 400 (например, годы 300, 1300 и 1900 не являются високосными,
а 1200 и 2000 являются).
4.Дано целое число в диапазоне 1–7. Вывести строку — название дня недели,
соответствующее данному числу (1 — «понедельник», 2 — «втор- ник» и т. д.).
5.Единицы массы пронумерованы следующим образом: 1 — килограмм, 2 — миллиграмм, 3 — грамм, 4 — тонна, 5 — центнер.
Дан номер едини- цы массы (целое число в диапазоне 1–5) и масса тела в этих единицах (вещественное число).
Найти массу тела в килограммах.
"""

"""
Цикл for
1.Даны два целых числа A и B (A < B). Найти сумму всех целых чисел от A до B включительно.
2.Найти сумму всех натуральных чисел в от A до B
3.Найти произведение положительных, сумму и количество отрицательных из 10 введенных целых значений.
4.Дан словарь пловцов с их результатами. Напечатать лучший результат заплыва среди 6 участников.
Бекиш Александр - 21,07 Будник Алексей - 20,34 Гребень Анастасия - 22,12 Давидович Татьяна - 30
Дешук Дмитрий - 24.01
Казак Анна - 28,17
5.Есть массив чисел. Известно, что каждое число в этом массиве имеет пару,
кроме одного: [1, 5, 2, 9, 2, 9, 1] => 5.
Напишите программу, которая будет выводить уникальное число
"""


# 1
A = int(input("Введите число A: "))
B = int(input("Введите число B (A < B): "))

total_sum = 0
for number in range(A, B + 1):
    total_sum += number

print(f"Сумма всех целых чисел от {A} до {B} включительно: {total_sum}")

# 2
A = int(input("Введите число A: "))
B = int(input("Введите число B (A < B): "))

total_sum = 0
for number in range(A, B + 1):
    if number > 0:  # Проверяем, что число натуральное (больше нуля)
        total_sum += number

print(f"Сумма всех натуральных чисел от {A} до {B}: {total_sum}")

# 3
positive_product = 1
negative_sum = 0
negative_count = 0

for _ in range(10):
    number = int(input("Введите целое число: "))
    if number > 0:
        positive_product *= number
    elif number < 0:
        negative_sum += number
        negative_count += 1

print(f"Произведение положительных чисел: {positive_product}")
print(f"Сумма отрицательных чисел: {negative_sum}")
print(f"Количество отрицательных чисел: {negative_count}")

# 4
results = {
    "Бекиш Александр": 21.07,
    "Будник Алексей": 20.34,
    "Гребень Анастасия": 22.12,
    "Давидович Татьяна": 30.0,
    "Дешук Дмитрий": 24.01,
    "Казак Анна": 28.17,
}

best_result = min(results.values())
best_swimmer = [name for name, time in results.items() if time == best_result]

print(f"Лучший результат заплыва: {best_result}, пловец: {', '.join(best_swimmer)}")


# 5
array = [1, 5, 2, 9, 2, 9, 1]

unique_number = 0
for number in array:
    unique_number ^= number

print(f"Уникальное число: {unique_number}")


"""
Цикл while
1.Дано число N. Найти произведение всех чисел от 0 до N.
2.Поле засеяли цветами двух сортов на площади S1 и S2.
Каждый год площадь цветов первого сорта увеличивается вдвое, а площадь второго сорта увеличивается втрое.
Через сколько лет площадь первых сортов будет составлять меньше 10% от площади вторых сортов.
3.Дано целое число N (>0). Используя операции деления нацело и взятия остатка от деления, найти количество и сумму его цифр.
4.Деду M лет, а внуку N лет. Через сколько лет дед станет вдвое старше внука.
И сколько при этом лет будет деду и внуку.
"""

# 1
N = int(input("Введите число N: "))

product = 1
i = 1

while i <= N:
    product *= i
    i += 1

print(f"Произведение всех чисел от 0 до {N}: {product}")

# 2
S1 = float(input("Введите начальную площадь первого сорта цветов: "))
S2 = float(input("Введите начальную площадь второго сорта цветов: "))

years = 0

while S1 >= 0.1 * S2:
    S1 *= 2
    S2 *= 3
    years += 1

print(
    f"Через {years} лет площадь первого сорта цветов будет составлять меньше 10% от площади второго сорта."
)

# 3
N = int(input("Введите целое число N (>0): "))

sum_digits = 0
count_digits = 0
original_N = N

while N > 0:
    digit = N % 10
    sum_digits += digit
    count_digits += 1
    N //= 10

print(f"Количество цифр в числе {original_N}: {count_digits}")
print(f"Сумма цифр в числе {original_N}: {sum_digits}")

# 3
M = int(input("Введите возраст деда M лет: "))
N = int(input("Введите возраст внука N лет: "))

years = 0

while M != 2 * N:
    M += 1
    N += 1
    years += 1

print(f"Через {years} лет дед станет вдвое старше внука.")
print(f"Возраст деда будет: {M} лет, возраст внука будет: {N} лет.")
